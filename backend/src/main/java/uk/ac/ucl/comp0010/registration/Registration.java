package uk.ac.ucl.comp0010.registration;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import uk.ac.ucl.comp0010.module.Module;
import uk.ac.ucl.comp0010.student.Student;

/**
 * Represents a registration of a student to a specific module.
 * This entity is used to map the association between a {@link Student} and a {@link Module}. Each
 * instance signifies that a given student has registered for a particular module.
 */
@Entity
public class Registration {

  /**
   * Unique identifier for the registration entity, auto-generated by the database.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  /**
   * The student associated with this registration.
   */
  @ManyToOne
  @JoinColumn(name = "student_id", nullable = false)
  private Student student;

  /**
   * The module that the student is registered for.
   */
  @ManyToOne
  @JoinColumn(name = "module_code", nullable = false)
  private Module module;

  /**
   * Default constructor required by JPA.
   */
  public Registration() {
  }

  /**
   * Constructs a new Registration with the specified student and module.
   *
   * @param student the {@link Student} who is registering for the module.
   * @param module  the {@link Module} that the student is registering for.
   */
  public Registration(Student student, Module module) {
    this.student = student;
    this.module = module;
  }

  /**
   * Retrieves the unique identifier of the registration.
   *
   * @return the ID of this registration.
   */
  public Long getId() {
    return id;
  }

  /**
   * Sets the unique identifier for this registration.
   *
   * @param id the ID to set for this registration.
   */
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Retrieves the student associated with this registration.
   *
   * @return the {@link Student} object representing the registered student.
   */
  public Student getStudent() {
    return student;
  }

  /**
   * Sets the student associated with this registration.
   *
   * @param student the {@link Student} to associate with this registration.
   */
  public void setStudent(Student student) {
    this.student = student;
  }

  /**
   * Retrieves the module that the student is registered for.
   *
   * @return the {@link Module} object representing the registered module.
   */
  public Module getModule() {
    return module;
  }

  /**
   * Sets the module associated with this registration.
   *
   * @param module the {@link Module} to associate with this registration.
   */
  public void setModule(Module module) {
    this.module = module;
  }
}
